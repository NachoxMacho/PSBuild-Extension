{
	"Public Function": {
		"prefix": "pubfun",
		"body": [
			"function ${1:$TM_FILENAME_BASE} {",
			"    $BLOCK_COMMENT_START",
			"    .SYNOPSIS",
			"    ${2:SYNOPSIS}",
			"    ",
			"    .DESCRIPTION",
			"    ${3:Description}",
			"",
			"    .OUTPUTS",
			"    ${4:OUTPUTS}",
			"",
			"    .INPUTS",
			"    ${5:INPUTS}",
			"",
			"    .EXAMPLE",
			"    ${1:$TM_FILENAME_BASE}",
			"    ",
			"    $BLOCK_COMMENT_END",
			"    [cmdletBinding()]",
			"    param (",
			"        $LINE_COMMENT ${7:Parameter help description}",
			"        [Parameter(${8:AttributeValues})]",
			"        [${9:ParameterType}]$${10:ParameterName}",
			"    )",
			"    process {",
			"        try {",
			"            ${0:$LINE_COMMENT Insert Code Here}",
			"        } catch {",
			"            \\$PSCmdlet.ThrowTerminatingError(\\$_)",
			"        }",
			"    }",
			"}"
		],
		"description": "Public Function"
	},
	"Private Function": {
		"prefix": "prifun",
		"body": [
			"function ${1:$TM_FILENAME_BASE} {",
			"    $BLOCK_COMMENT_START",
			"    .DESCRIPTION",
			"    ${2:Description}",
			"",
			"    .OUTPUTS",
			"    ${3:OUTPUTS}",
			"",
			"    .INPUTS",
			"    ${4:INPUTS}",
			"    $BLOCK_COMMENT_END",
			"    [cmdletBinding()]",
			"    param (",
			"        $LINE_COMMENT ${5:Parameter help description}",
			"        [Parameter(${6:AttributeValues})]",
			"        [${7:ParameterType}]$${8:ParameterName}",
			"    )",
			"    process {",
			"        try {",
			"            ${0:$TM_SELECTED_TEXT}",
			"        } catch {",
			"            \\$PSCmdlet.ThrowTerminatingError(\\$_)",
			"        }",
			"    }",
			"}"
		],
		"description": "Private Function"
	},
	"Public Pester Test": {
		"prefix": "pubpester",
		"body": [
			"BeforeDiscovery {",
			"    $LINE_COMMENT Setup parameter test cases",
			"    \\$paramTestCases = @(",
			"        ${1:$LINE_COMMENT Setup Test cases}",
			"    )",
			"",
			"    $LINE_COMMENT Setup custom function test cases (if necessary)",
			"}",
			"",
			"Describe \"${TM_FILENAME_BASE/(\\.Tests)//} Unit Tests\" -Tag Unit {",
			"",
			"    Context \"Parameter Tests\" {",
			"",
			"        BeforeAll {",
			"            \\$commandInfo = Get-Command -Name '${TM_FILENAME_BASE/(\\.Tests)//}'",
			"        }",
			"",
			"        It 'Should have [<Type>] parameter [<Name>] ' -TestCases \\$parameterTestCases {",
			"            \\$commandInfo | Should -HaveParameter \\$Name -Type \\$Type",
			"            if (\\$Mandatory) {",
			"                \\$commandInfo | Should -HaveParameter \\$Name -Mandatory",
			"            } else {",
			"                \\$commandInfo | Should -HaveParameter \\$Name -Not -Mandatory",
			"            }",
			"        }",
			"",
			"    }",
			"    ${2:$LINE_COMMENT Extra Context Block}",
			"",
			"}",
			"",
			"Describe \"FunctionName Integration Tests\" -Tag Integration {",
			"",
			"    ${3:$LINE_COMMENT Extra Context Block}",
			"}",
			""
		],
		"description": "Pester test for a public module function"
	},
	"Private Pester Test": {
		"prefix": "pripester",
		"body": [
			"BeforeDiscovery {",
			"    $LINE_COMMENT Setup parameter test cases",
			"    \\$paramTestCases = @(",
			"        ${1:$LINE_COMMENT Setup Test cases}",
			"    )",
			"",
			"    $LINE_COMMENT Setup custom function test cases (if necessary)",
			"}",
			"",
			"Describe \"${TM_FILENAME_BASE/(\\.Tests)//} Unit Tests\" -Tag Unit {",
			"",
			"    Context \"Parameter Tests\" {",
			"",
			"        BeforeAll {",
			"            \\$commandInfo = InModuleScope -ModuleName \\$BuildConfig.ModuleName -Scriptblock {",
			"                Get-Command -Name '${TM_FILENAME_BASE/(\\.Tests)//}'",
			"            }",
			"        }",
			"",
			"        It 'Should have [<Type>] parameter [<Name>] ' -TestCases \\$parameterTestCases {",
			"            \\$commandInfo | Should -HaveParameter \\$Name -Type \\$Type",
			"            if (\\$Mandatory) {",
			"                \\$commandInfo | Should -HaveParameter \\$Name -Mandatory",
			"            } else {",
			"                \\$commandInfo | Should -HaveParameter \\$Name -Not -Mandatory",
			"            }",
			"        }",
			"",
			"    }",
			"    ${2:$LINE_COMMENT Extra Context Block}",
			"",
			"}",
			"",
			"Describe \"FunctionName Integration Tests\" -Tag Integration {",
			"",
			"    ${3:$LINE_COMMENT Extra Context Block}",
			"}",
			""
		],
		"description": "Pester test for a private module function"
	},
	"Pester Parameter Test Case": {
		"prefix": "pester-param-test-case",
		"body": [
			"@{",
			"    Name      = '${1:ParameterName}'",
			"    Mandatory = ${2|$true,$false|}",
			"    Type      = [${3:string}]",
			"}"
		],
		"description": "Function parameter test case"
	},
	"Pester Context Block": {
		"prefix": "pester-context",
		"body": [
			"Context \"${1:Use case}\" {",
			"",
			"    BeforeAll {",
			"",
			"    }",
			"",
			"    It \"${2:Should have some result}\" {",
			"        ${3:Assertion}",
			"    }",
			"",
			"}"
		],
		"description": "New Pester context block for a function 'use case'"
	}
}